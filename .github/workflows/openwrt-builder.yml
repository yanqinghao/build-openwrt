# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  repository_dispatch:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install clang ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Clone source code
        run: |
          git clone https://github.com/coolsnowwolf/lede -b master openwrt

      - name: Update feeds
        run: |
          cd openwrt
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          echo 'src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main' >> feeds.conf.default
          echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;4.77-6' >> feeds.conf.default
          echo 'src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2;1.29-1' >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a
          rm -rf package/feeds/helloworld/hysteria
          mv ../.config .config
          sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
          sed -i 's/luci-theme-bootstrap/luci-theme-argon/g' feeds/luci/collections/luci/Makefile
          sed -i 's/OpenWrt/yanqinghao-router/g' package/base-files/files/bin/config_generate

      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig

      - name: Download packages
        run: |
          cd openwrt
          make download -j16

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      # - name: Upload buildinfo
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_buildinfo
      #     path: ./openwrt/artifact/buildinfo/

      # - name: Upload package
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_package
      #     path: ./openwrt/artifact/package/

      # - name: Upload firmware
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_firmware
      #     path: ./openwrt/bin/targets/

      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          [ ${UPLOAD_GOFILE} = true && ${{ steps.gofile.outputs.url }} ] && echo "ðŸ”— [GoFile](${{ steps.gofile.outputs.url }})" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware to release
        uses: softprops/action-gh-release@master
        if: steps.tag.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ./openwrt/bin/targets/*